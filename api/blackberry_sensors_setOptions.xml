<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//IXIA//DTD IXIA DITA Composite//EN" "../../system/dtd/ixia/IxiaDitabase.dtd">
<reference id="blackbery_sensors_setOptions" xml:lang="en-us">
    <title><apiname>setOptions()</apiname></title>
    <shortdesc><i>This function will set a sensor with the specifed options. Sensor options can be set before or after the sensor is active.</i></shortdesc>
    <refbody>
        <section>
            <title>Synopsis:</title>
            <pre scale="80">setOptions(data)</pre>
        </section>
        <section>
            <title>Parameters:</title>
            <dl>
                <dlentry>
                    <dt><varname>sensor</varname> {Object}</dt>
                    <dd><p>The sensor to listen to. </p></dd>
                </dlentry>
                <dlentry>
                    <dt><varname>options</varname> {Object}</dt>
                    <dd><p>The options for the sensor being started.</p>
                        <dl>
                        	<dlentry>
                        		<dt><varname>delay</varname> {String}</dt>
                        		<dd><p>Time in Âµs (microseconds) to report back between sensor updates.</p></dd>
                        	</dlentry>
                            <dlentry>
                                <dt><varname>background</varname> {Boolean}</dt>
                                <dd><p>Allow sensor to send updates while the screen is off.</p></dd>
                            </dlentry>
                            <dlentry>
                                <dt><varname>batching</varname> {Boolean}</dt>
                                <dd><p>When batching is enabled and supported by the hardware, sensors will report samples in hardware-specific batch sizes to conserve power.</p></dd>
                            </dlentry>
                            <dlentry>
                                <dt><varname>queue</varname> {Boolean}</dt>
                                <dd><p>Enabling the queue creates a client-specific service side queue of events, this is useful to not miss any events.</p></dd>
                            </dlentry>
                            <dlentry>
                                <dt><varname>reducedReporting</varname> {Boolean}</dt>
                                <dd><p>When reduced reporting is enabled, only a significant change between the last read event and the current unread event will cause an event to be delivered (useful for power saving).</p></dd>
                            </dlentry>
                        </dl>
                    </dd>
                </dlentry>
            </dl>
        </section>
    </refbody>
</reference>

{!/*
* Copyright 2010-2011 Research In Motion Limited.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/!}

{!
    var childrenSupport,
        i=-1;

!}

<for each="children" in="data.ownChildren">
    {!i++;!}
    <if test="children && children.length">
       {!childrenSupport = new BBTag.Support(children)!}
        <div x-ww-support="{+childrenSupport.supportTag+}">
            <h2>{+data.headerText[i]+}:</h2>
            <hr/>
          
            <table>
                <thead><tr>
                    <th>
                    Property
                   
                    </th>
                    <th>
                       Type
                       
                    </th>
                    <th>
                       Description
                       
                    </th>
                    <th>
                       Supported Platform(s)            
                       
                    </th>
                </tr></thead>
                
                <for each="member" in="children">
                    <tr x-ww-support="{+member.support.supportTag+}">
                        <td>
                            <a name="{+Link.symbolNameToLinkName(member)+}">{+getSymbolName(member)+}</a>
{!/****************** New Types MUST Handle the display of Default Values HERE ************************************************/!}
                            <if test="member.defaultValue">
                                <if test="isConstant(member)">
                                    {+ " = " + resolveLinks(member.defaultValue) +}
                                </if>
                                <if test="isProperty(member)">
                                    <br/>
                                    <b>{+"default: " +resolveLinks(member.defaultValue)+}</b>
                                </if>
                            </if>
                        </td>
                        <td>
                            <if test="member.isCallback && !isConstant(member)">
                                {+ ((member.type)?(new Link().toSymbol(member.type).toString().replace(/\|/g, ' | ')) : "") + makeCallbackSignature(member.params) +}
                            <else/>
                                {+((member.type)?(new Link().toSymbol(member.type).toString().replace(/\|/g, ' | ')) : "")+}
                            </if>
{!/******************  New Types MUST Handle the display of Type Modifiers here ************************************************/!}                            
                            <if test="isProperty(member)">
                                <if test="member.isStatic">
                                    <br /> Static
                                </if>
                                <if test="member.readOnly">
                                    <br /> Readonly
                                </if>
                            </if>
                        </td>
                        
                        <td >
                            {+resolveLinks(member.desc)+}
                            <if test="member.params">
                                <br />
                                <for each="subItem" in="member.params">
                                    <br />
                                    <b>{+subItem.name+":"+}</b>
                                    {+resolveLinks(subItem.desc)+}
                                </for>
                            </if>
                            <if test="member.deprecated">
                                <table>
                                    <tr>
                                        <td>
                                            <i>{+ resolveLinks(member.deprecated) +}</i>
                                        </td>
                                    </tr>
                                </table>
                            </if>               
                        </td>
                        
                        <td class="tdNoWrap">
                            <if test="member.support.supportStrings">
                                <for each="item" in="member.support.supportStrings">
                                    &nbsp;- {+item+}
                                    <br />
                                </for>                  
                            </if>
                        </td>
                    </tr>
                </for>
            </table>
            
            <for each="member" in="children">
				{+subtemplate("subtemplates/example.tmpl", {example: member.example, type: "Property"})+}  
            </for>
        </div>
    </if>
</for>
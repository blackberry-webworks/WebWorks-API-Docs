{!
/*
* Copyright 2010-2012 Research In Motion Limited.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
!}
var menuHasSelected, 
    localStore, 
    localStoreAvailable, 
    setup, 
    Storage, 
    menu_map,
    menu_link_map, 
    default_menu,

    index_menu  = [ 
                    {"children": [], "alt": "", "link": "{+(new TextLink()).toFile("classes.html")+}", "id": "class", "title": "All classes"}, 
                    {"children": [], "alt": "Classes sorted via topics", "link": "{+(new TextLink()).toFile("topics.html")+}", "id": "topics", "title": "Topics"},
                    {"children": [], "alt": "", "link": "{+(new TextLink()).toFile("bb_index.html")+}", "id": "bb", "title": "BlackBerry OS"}, 
                    {"children": [], "alt": "", "link": "{+(new TextLink()).toFile("pb_index.html")+}", "id": "pb", "title": "BlackBerry PlayBook OS"},
                    {"children": [], "alt": "", "link": "{+(new TextLink()).toFile("bb10_index.html")+}", "id": "bb10", "title": "BlackBerry 10 OS"}
                  ],

    class_menu  = {+ JSON.stringify(buildClassMenu(data)) +},
    topics_menu = {+ JSON.stringify(buildTopicsMenu(data)) +},
    bb_menu     = {+ JSON.stringify(buildClassMenu(data, function (element) { return element.support && element.support.hasBBSupport()})) +},
    pb_menu     = {+ JSON.stringify(buildClassMenu(data, function (element) { return element.support && element.support.hasPBSupport()})) +},
    bb10_menu   = {+ JSON.stringify(buildClassMenu(data, function (element) { return element.support && element.support.hasBB10XSupport()})) +};

menu_link_map = {
    "index_menu":   "{+(new TextLink()).toFile("topics.html")+}",
    "class_menu":   "{+(new TextLink()).toFile("classes.html")+}",
    "topics_menu":  "{+(new TextLink()).toFile("topics.html")+}",
    "bb_menu":      "{+(new TextLink()).toFile("bb_index.html")+}",
    "pb_menu":      "{+(new TextLink()).toFile("pb_index.html")+}",
    "bb10_menu":    "{+(new TextLink()).toFile("bb10_index.html")+}"
};

menu_map = {
    "index_menu":   index_menu,
    "class_menu":   class_menu,
    "topics_menu":  topics_menu,
    "bb_menu":      bb_menu,
    "pb_menu":      pb_menu,
    "bb10_menu":    bb10_menu
};

default_menu = "topics_menu";

menus = ["index_menu", "class_menu", "topics_menu", "bb_menu", "pb_menu", "bb10_menu"];

is_ie7 = $('html').hasClass('ie7');
classAttr = 'class';
if (is_ie7) {
  classAttr = 'className';
}

stage = {
	initiated : false,
    window_top : 0,
    window_height : 0,
    visible_bottom : 0,
	document_height : 0,
	custom_measurements : [],
	add_measurement : function(name, method, measure_now) {
		var m_name;
		m_name = 'measure_'+name;
		this[name] = 0;
		this[m_name] = method;
		this.custom_measurements.push(m_name);
		if (measure_now) {
			this[m_name]();
		}
	},
	measure_document_height : function() {
        this.document_height = $(document).height();
    },
    measure_window_height : function() {
        this.window_height = $(window).height();
    },
    measure_window_top : function() {
        this.window_top = $(window).scrollTop();
    },
    measure_visible_bottom : function() {
        this.visible_bottom = this.window_top+this.window_height;
    },
	measure_distance : function(x,y) {
		return x-y;
	},
	recalculate : function() {
		this.measure_window_top();
		this.measure_window_height();
        this.measure_visible_bottom();
		this.measure_document_height();
		for (var i = 0; i < this.custom_measurements.length; i++) {
			this[this.custom_measurements[i]]();
		}
	},
    initiate : function() {
		this.recalculate();
		this.initiated = true;
    }
}
stage.add_measurement('footer_top', function () {
						var m = $('#main');
						stage.footer_top = m.offset().top + m.height();
					}, false);
stage.add_measurement('art_height', function () {
						stage.art_height = $('#main').height();
					}, false);

/* Assumes jQuery, sticky and stage is loaded */
var sticky_id, sticky_anchor_id, main_id, sizer;
main_id = '#main';
sticky_id = "#sticky";
sticky_anchor_id = "#sticky-anchor";
sizer = {
    initiated : false,
    no_resizing: false,
    timeout_event : null,
    main_content : null,
    main_bottom_offset : 0,
    calculate_new_size : function () {
        var x, a_os, s_os, sections_bottom, sn_children, padding_bottom;
        padding_bottom = 30;
        stage.recalculate();
        a_os = sticky.anchor_el.offset().top;
        sn_children = $('#side-nav-children');
        sections_bottom = sn_children.offset().top;
        x = stage.visible_bottom - sections_bottom - padding_bottom;
        if (stage.visible_bottom > stage.footer_top) {
            x = stage.measure_distance(stage.footer_top, (sections_bottom - padding_bottom));
        }
        return x;
    },
    set_resize_event : function (delay) {
        var x;
        if (this.timeout_event !== null) {
            clearTimeout(this.timeout_event);
        }
        x = this.calculate_new_size();
        this.timeout_event = setTimeout("$('#side-nav-children').animate({height:'" + x + "px'}, {duration: 200, step: function () { $(this).css('overflow-y', 'scroll') }})", delay);
    },
    resize : function () {
        if (!sticky.disabled) {
            if (!this.initiated) {
                this.initiate();
            }
            if (!this.no_resizing) {
                if (!sticky.reached_bottom) {
                    this.set_resize_event(300);
                }
            }
        }
    },
    initiate: function () {
        var sticky_bottom;
        if (!sticky.disabled) {
            this.main_content = $(main_id);
            this.main_bottom_offset = this.main_content.offset().top + $(main_id).height();
            sticky_bottom = sticky.el.offset().top + sticky.el.height();
            sticky_bottom = $(window).scrollTop();
            if (sticky_bottom > this.main_bottom_offset) {
                this.no_resizing = true;
            }
            this.initiated = true;
        } else {
            this.no_resizing = true;
        }
    }
};

/* Assumes jQuery and stage-object is loaded */
sticky = {
    initiated : false,
    disabled : false,
	disable_on_height: 0,
    el : null,
    anchor_el : null,
    footer_el : null,
    reached_bottom : false,
    refresh_elements : function () {
        this.el = $('#sticky');
        this.anchor_el = $('#sticky-anchor');
        this.initiated = true;
        if (this.el.length === 0) {
            this.disabled = true;
        }
    },
    scrollEvent : function () {
        if (!this.disabled) {
			var distance, a_os, s_os;
            if (!this.initiated) {
                this.initiate();
            }
			
            stage.recalculate();
            a_os = this.anchor_el.offset().top;
            if (stage.visible_bottom > stage.footer_top && (stage.footer_top - a_os) > stage.art_height) {
				this.visible_bottom = stage.window_top + stage.window_height;
				distance = stage.measure_distance(stage.visible_bottom, stage.footer_top);
				this.el.css({position : "fixed", top : "", bottom : distance + 'px'});
				this.reached_bottom = true;
            } else {
                this.reached_bottom = false;
                if (stage.window_top > a_os) {
                    this.el.css({position : "fixed", top : "0px", bottom : ""});
                } else {
                    if (stage.window_top <= a_os) {
                        this.el.css({position : "relative", top : "", bottom : ""});
                    }
                }
            }
        }
	},
    initiate : function () {
        this.refresh_elements();
        this.scrollEvent();
    }
};

function reset_size_and_scroll() {
    sticky.scrollEvent();
    sizer.resize();
}

function getCookie(cookie_name) {
    var results = document.cookie.match('(^|;) ?'+cookie_name+'=([^;]*)(;|$)');
    if (results) {
        return (unescape(results[2]));
    }
    else {
        return null;
    }
}

menuHasSelected = null;
localStore = null;
Storage = {
    setup : function() {
        localStorageAvailable = false;
        if (Modernizr.localstorage) {
            localStorageAvailable = true;
            localStore = window.localStorage;
            localStore.setItem('ran','once');
        } else {
            
        }
    },
    add:function(key,item) {
        if (localStorageAvailable) {
            localStore[key] = item;
        } else {
            /* TODO: Dynamic expire date of cookies */ 
            document.cookie = key+'='+item+'; expires=Fri, 10 Feb 2012 02:47:11 UTC; path=/'
        }
    },
    get:function(key) {
        if (localStorageAvailable) {
            if (key in localStore) {
                return localStore[key];
            } else {
                return null;
            }
        } else {
            return getCookie(key);
        }
    }
};

store = Storage;
store.setup();

function menuItemToHtml(menuItem, selected_url, level) {
    var li, a, span, txt, ult;
    li = document.createElement('li');
    a = document.createElement('a');
    a.setAttribute('href', menuItem['link']);
    a.setAttribute(classAttr, 'menu_link');
    span = document.createElement('span');
    if (menuItem['link'] == selected_url) {
        menuHasSelected = true;
        span.setAttribute(classAttr, 'item active');
    } else {
        span.setAttribute(classAttr, 'item');
    }
    
    if ("alt" in menuItem) {
        a.setAttribute('title',menuItem['alt']);
    }
    txt = document.createTextNode(menuItem['title']);
    a.appendChild(txt);
    span.appendChild(a);
    li.appendChild(span);
    if (menuItem['children'].length > 0) {
        ult = createListFromMenu(menuItem['children'], selected_url, level+1);
        li.appendChild(ult);
    }
    return li;
}

function createUl(level) {
    var ul = document.createElement('ul');
    ul.setAttribute(classAttr, 'lv_'+level+' clearfix');
    return ul;
}


function createSubsection(name) {
    var txt, el, header;
    el = document.createElement('div');
    el.setAttribute(classAttr,'side-nav-sub_section clearfix');
    if (name != null) {
        txt = document.createTextNode(name);
        header = document.createElement('h3');
        header.appendChild(txt);
        el.appendChild(header);
    }
    return el;
}

function createListFromMenu(menu, selected, level) {
    var ul, mItem, el, i;
    ul = createUl(level);
    for (i = 0; i < menu.length; i++) {
        mItem = menu[i];
        el = menuItemToHtml(mItem, selected, level);
        ul.appendChild(el);
    }
    if (menuHasSelected) {
        ul.setAttribute(classAttr, ul.getAttribute(classAttr)+' child_active');
        menuHasSelected = false;
    }
    
    return ul;
}

function createPrimaryMenu(menu, selected_menu) {
    var ul;
	ul = createListFromMenu(menu_map[menu],menu_link_map[selected_menu], 1);
    if (menuHasSelected != null) {
        menuHasSelected = null;
    }
    return ul;
}

function renderMenu(selected_url, menu_to_load) {
    var sideNavPar, sideNavCh, prim, menu, sub, mi, ul, temp_ul, stored, selected, i;
    sideNavPar = document.getElementById('side-nav-parents');
    sideNavCh = document.getElementById('side-nav-children');
    
    if (menu_to_load != null) {
        menu = menu_map[menu_to_load];
        store.add('selectedmenu', menu_to_load)
    } else {
        stored = store.get('selectedmenu');
        if (stored == null) {
            menu = menu_map[default_menu];
            store.add('selectedmenu', default_menu)
        } else {
            menu = menu_map[stored];
            store.add('selectedmenu', stored);
        }
    }
	stored = store.get('selectedmenu');
	selected = stored != null ? stored : default_menu;
    prim = createPrimaryMenu('index_menu',selected);
    sideNavPar.appendChild(prim);
	$('#side-nav-parents').removeClass('loading');
    temp_ul = createUl(1);
    for (i = 0; i < menu.length; i++) {
        mi = menu[i];
        if (mi["subsection"] == true) {
            if (temp_ul.children.length > 0) {
                sub = createSubsection(null);
                if (menuHasSelected) {
                    temp_ul.setAttribute(classAttr, temp_ul.getAttribute(classAttr)+' child_active');
                }
                sub.appendChild(temp_ul);
                sideNavCh.appendChild(sub);
                temp_ul = createUl(0);
            }
            sub = createSubsection(mi['title']);
            ul = createListFromMenu(mi['children'], selected_url, 1);
            
            sub.appendChild(createListFromMenu(mi['children'], selected_url, 1));
            sideNavCh.appendChild(sub);
            if (menuHasSelected) {
                menuHasSelected = false;
            }
        } else {
            temp_ul.appendChild(menuItemToHtml(mi,selected_url, 1));
        }
    }
    if (temp_ul.children.length > 0) {
        sub = createSubsection(null);
        if (menuHasSelected) {
            temp_ul.setAttribute(classAttr, temp_ul.getAttribute(classAttr)+' child_active');
        }
        sub.appendChild(temp_ul);
        sideNavCh.appendChild(sub);
    }
    $('#side-nav-children').removeClass('loading');
}

function initiateApiMenu() {
	var menu, menu_id_str, selected, siblings;
	menu = null;
	menu_id_str = $('.side-nav-content').attr('id');
	if (menu_id_str !== 'none') {
		menu = menu_id_str;
	}
	$(document).ready(function () {
		stage.initiate();
		sticky.initiate();
		sizer.initiate(); /* Initiates resizing of menu on pages where it is relevant */

		selected = $('.no_children.item_active').first();
		selected.siblings().addClass('active_sibling');
		$("#main a").each(function () {
			$(this).bind('click', function () {
				sticky.scrollEvent();
			});
		});
		
	});
	$(window).load(function () {
		var container, scrollTo;
		renderMenu(window.location.pathname, menu);
		reset_size_and_scroll();
		$(function () {
			container = $('#side-nav-children');
			scrollTo = $('.active', container);
			if (scrollTo.length > 0) {
				container.scrollTop(scrollTo.offset().top - container.offset().top + container.scrollTop() - 80);
			}
		});
	});

	$(window).resize(function (e) {
		if (e) { e.stopPropagation(); }
		reset_size_and_scroll();
	});
	$(window).scroll(function (e) {
		if (e) { e.stopPropagation(); }
		reset_size_and_scroll();
	});
}

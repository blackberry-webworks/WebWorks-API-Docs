{!
/*
* Copyright 2010-2012 Research In Motion Limited.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

var functionParams,
    subParams,
    i = -1;
!}
<for each="children" in="data.ownChildren">
    {! i++; !}
    <if test="children && children.length">
        <div class="ref-sect">
            <div class="ref-sect-title clearfix">
                <h2>{+ data.headerText[i] +}</h2>
            </div>
            <div class="ref-sect-content">
                <for each="member" in="children">
                    <div class="detailed_item function" x-ww-support="{+member.support.supportTag+}">
                        <h3>
                            <a name="{+Link.symbolNameToLinkName(member)+}"></a>
                 
                            {!//The function signature !}
                            <if test="member.signature">
                                {+member.signature+}
                            <else/>
                                <if test="isConstructor(member)">
                                    {+getSymbolName(member)+}
                                    <if test="!member.is('OBJECT')">
                                        {+makeSignature(member.params)+}
                                    </if>
                                <else/>
                                    <if test="isURIMethod(member) || member.noSignature">
                                            {+getSymbolName(member)+}
                                    <else/>
                                        <if test="member.isStatic">static</if>              
                                        <if test="member.readOnly">readonly</if>
                                        <if test="member.type">{+new Link().toSymbol(member.type).toString().replace(/\|/g, ' | ')+}
                                        <else/>
                                            void
                                        </if>
                                        <if test="member.squareAccessor">
                                            [{+makeSignature(member.params).slice(1,-1)+}]
                                        <else />
                                            {+getSymbolName(member)+}
                                            <if test="!isProperty(member)">
                                                <if test="isConstant(member)">
                                                    <if test="member.defaultValue">
                                                        = {+ resolveLinks(member.defaultValue) +}
                                                    </if>
                                                <else />
                                                    {+makeSignature(member.params, true)+}
                                                </if>
                                            </if>
                                        </if>                          
                                    </if>
                                </if>
                            </if>
                            <br />
                        </h3>
                        <div class="detailed description">
                            {!/**********     Notices     **********/!}
                            <if test="member.apiNotice">
                                <for each="item" in="member.apiNotice">
                                    <if test="!(isBlank(item.title) || isBlank(item.desc))">
                                        <div class="notice note">                        
                                            <span><b>{+item.title+}</b></span>
                                            <p>{+resolveLinks(item.desc)+}</p>
                                        </div>
                                    </if>
                                </for>
                                <br />
                            </if>
                    
                            {!/**********     Deprecation     **********/!}
                            <if test="member.deprecated">
                                <div class="notice warning">
                                    <h3>Deprecation Notice:</h3>
                                    {+ resolveLinks(member.deprecated) +}
                                </div>                
                            </if>           
                            
                            {!/**********     Description     **********/!}
                            <p>{+resolveLinks(member.desc)+}</p>
                            <br />
                            
                            {!/**********     Support Strings     **********/!}
                            <if test="member.support.supportStrings">
                                <table>              
                                    <thead><tr><th colspan="2">
                                        Supported Platforms
                                    </th></tr></thead>
                                    <for each="item" in="member.support.supportStrings">
                                        <tr><td></td><td>
                                            &nbsp;- {+item+}
                                        </td></tr>
                                    </for>
                                </table>              
                            </if>                   
                            <br />
                            
                            {!/**********     Parameters     **********/!}
                            <if test="member.params.length || member.callbacks">
                                <br />
                                <table>
                                    <thead><tr><th colspan="2">
                                        Parameters
                                    </th></tr></thead>
                                    {!functionParams = member.params.filter(function($){return $.name.indexOf(".") == -1});!}               
                                    <for each="item" in="functionParams">
                                        {!subParams = member.params.filter(function($){return $.name.indexOf(item.name+".") === 0});!}
                                        <tr>
                                            <td><b>{+item.name+}</b></td>
                                            <td>
                                                <if test="item.defaultValue"><i>[Default Value: {+item.defaultValue+}]</i><p/></if>
                                                {+resolveLinks(item.desc)+}                         
                                                <if test="subParams.length">
                                                    <br />
                                                    <for each="subItem" in="subParams">
                                                        <br />
                                                        <b>{+subItem.name.slice(subItem.name.indexOf(".")+1,subItem.name.length)+":"+}</b> {+resolveLinks(subItem.desc)+}
                                                    </for>
                                                </if>
                                            </td>
                                        </tr>
                                    </for>              
                                </table>
                            </if>                   

                            
                            {!/**********     Exceptions Value     **********/!}
                            <if test="member.exceptions.length">
                                <br />
                                <table>
                                    <thead><tr><th colspan="2">
                                           <if test="isURIMethod(member)">Error Codes<else/>Throws</if>
                                    </th></tr></thead>
                                    <for each="item" in="member.exceptions">
                                        <tr>
                                            <td>
                                                {+((item.type)?(new Link().toSymbol(item.type).toString().replace(/\|/g, ' | ')) : "")+}                                                
                                            </td>
                                            <td>
                                                {+resolveLinks(item.desc)+}
                                            </td>
                                        </tr>
                                    </for>
                                </table>
                            </if>

                            {!/**********     Return Value     **********/!}
                            <if test="member.returns.length && member.returns.filter(function($){return !isBlank($.desc);}).length && !isConstructor(member)">
                                <br />
                                <span><b>Return:</b></span>
                                <for each="item" in="member.returns">
                                    <if test="isURIMethod(member)">
                                        <pre> {+resolveLinks(item.desc)+} </pre>
                                    <else/>
                                        <p> {+resolveLinks(item.desc)+} </p>
                                    </if>
                                </for>
                                <br />
                            </if>
                            
                            {!/**********     Default Value     **********/!}
                            <if test="member.defaultValue && isProperty(member)">
                                <br />
                                <span><b>Default Value:</b></span>
                                <p> {+resolveLinks(member.defaultValue)+} </p>
                                <br />
                            </if>

                            {!/**********     Code Example     **********/!}
                            {+subtemplate("subtemplates/example.tmpl", {example: member.example})+}
                        </div>
                    </div>
                </for>
            </div>
        </div>
    </if>
</for>

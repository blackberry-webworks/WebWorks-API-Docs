{!
/*
* Copyright 2010-2012 Research In Motion Limited.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

    var allChildren = [],
        constructors = [],
        ownMethods = [],
        ownURIMethods = [],
        constructors = [],
        ownProperties = [],
        ownConstants = [],
        ownEvents = [],
        mandatoryPermissions,
        optionalPermissions,
        generateDefaultConstructor = !data.isBuiltin() && data.is('CONSTRUCTOR') && !data.noConstructor;


    if(data.methods && data.methods.length){
        ownMethods = data.methods.filter(function($){return $.memberOf == data.alias  && isMethod($)}).sort(makeNameSort());
        ownURIMethods = data.methods.filter(function($){return $.memberOf == data.alias  && isURIMethod($)}).sort(makeNameSort());
        constructors = data.methods.filter(function($){return $.memberOf == data.alias  && isConstructor($)}).sort(makeNameSort());
    }

    if(data.properties && data.properties.length){
        ownProperties  = data.properties.filter(function($){return $.memberOf == data.alias && isProperty($)}).sort(makeNameSort());
        ownConstants  = data.properties.filter(function($){return $.memberOf == data.alias && isConstant($)});
        constructors =  constructors.concat(data.properties.filter(function($){return $.memberOf == data.alias && isConstructor($)}));
    }

    if(data.events && data.events.length){
        ownEvents = data.events.filter(function($){return $.memberOf == data.alias  && isEvent($)}).sort(makeNameSort());
    }


    //Should we generate the default constructor
    if(generateDefaultConstructor){
        constructors.unshift(data);
    }

    allChildren = allChildren.concat(ownMethods, ownURIMethods, ownProperties, ownConstants, ownEvents);
!}

<section>

    <script type="text/javascript">
        (function() {
            function getDesiredElements(element, attributeName) {
                var results = new Array();
                if (element.hasAttribute(attributeName))
                    results.push(element);

                //Check child nodes
                for (var i = 0; i < element.childNodes.length; i++) {
                    var child = element.childNodes[i];
                    if (child.nodeType == 1) {
                        results = results.concat(getDesiredElements(child, attributeName));
                    }
                }
                return results;
            }

            function runFilter() {
                var ACCEPTABLE_FILTERS = ["bb_menu", "pb_menu", "bb10_menu"],
                    filter = localStorage.getItem('selectedmenu'),
                    elements,
                    target,
                    x_ww_support,
                    i;

                if (ACCEPTABLE_FILTERS.indexOf(filter) !== -1) {
                    elements = getDesiredElements(document.body, 'x-ww-support');
                    for (i = 0; i < elements.length; i++) {
                        target = elements[i];
                        x_ww_support = target.getAttribute('x-ww-support').split('|');
                        if (x_ww_support.indexOf(filter) < 0) {
                            target.style.display = 'none';
                        }
                    }
                }
            }

            if(window.attachEvent) {
                window.attachEvent('onload', runFilter);
            } else {
                if(window.onload) {
                    var curronload = window.onload,
                        newonload = function() {
                        curronload();
                        runFilter();
                    };
                    window.onload = newonload;
                } else {
                    window.onload = runFilter;
                }
            }
        })();
    </script>

    <script type="text/javascript">

        function viewSupportedTable() {
            var table = document.getElementById('APISupportTable');
            if (table != null && table.style.display != 'inline') {
                table.style.display = 'inline';
            }
            else {
                table.style.display = 'none';
            }
        }

    </script>
    
    <style type="text/css">

        .apiYes {
            background-color: #D1F8FB;
        }
        
        .tdNoWrap {
            white-space:nowrap;
        }
        
        .APISupportTable {
            display:none;
        }
    </style>

    <div>

{!/**********     Class Heading     **********/!}
        <h1>
            <if test="data.toc && data.toc.desc">
                {+data.toc.desc+}
            <else />
                {+data.alias+}
            </if>
        </h1>

{!/**********     Class Description     **********/!}
        <if test="data.classDesc">
            <p>
                {+resolveLinks(data.classDesc)+}

{!/***********     Class-Wide examples     ***********/!}
                <if test="!generateDefaultConstructor && data.example">
                    <div x-ww-support="{+data.support.supportTag+}">
                    {+subtemplate("subtemplates/example.tmpl", {example: data.example})+}
                    </div>
                </if>
            </p>
        </if>

{!/**********     Notices     **********/!}
        <if test="data.notice">
            <for each="item" in="data.notice">
                <if test="!(isBlank(item.title) || isBlank(item.desc))">
                    <div class="notice warning">                        
                        <span><b>{+item.title+}</b></span>
                        <p>{+resolveLinks(item.desc)+}</p>
                    </div>
                </if>
            </for>
            <br />
        </if>

{!/***********     Beta Notice     ***********/!}
        <if test="data.betaTag">
            <div class="notice warning">                
                <span><b>Beta Notice:</b></span>
                <p>
                    This API is considered to be in Beta.
                    The function and property signatures listed below could change at anytime.
                    Once the API moves out of Beta it will be distributed as part of the core API.
                    <br /><br />
                    <for each="item" in="data.betaTag">
                        {+resolveLinks(item.desc)+}
                    </for>
                    <br /><br />
                    <i>Last Updated: {+new Date()+}</i>
                </p>
            </div>
        </if>

{!/***********     Learning Resources     ***********/!}
        <if test="data.learnTag">
            <div class="ref-sect ref-index">
                <div class="ref-sect-title">
                    <h2>Learning Resources:</h2>
                </div>
                <div class="ref-sect-content">
			        <table><tbody>
                        <for each="item" in="data.learnTag">
                            <tr><td class="notice note">
                                {!output+="<a href=" + item.name + " target='_new'>" + item.type + "</a>";!}
                                {+item.desc+}
                            </td></tr>
                        </for>
                    </tbody></table>
                </div>
            </div>
        </if>

{!/***********     Supported Platforms    ***********/!}
        <if test="data.support.supportStrings">
            <div class="ref-sect ref-index">
                <div class="ref-sect-title">
                    <h2>Supported Platform(s)</h2>
                </div>
                <div class="ref-sect-content">
                    <if test="data.support.supportStrings.length">
                        <table>
                            <tbody>
                            <for each="supportString" in="data.support.supportStrings">
                                <tr><td>- {+supportString+}</td></tr>
                            </for>
                            </tbody>
                        </table>
                    </if>
                    <a href="javascript:viewSupportedTable()">View Supported Platform Table</a>
                    <div class="APISupportTable" id="APISupportTable">
                        <table class="apiTable">
                            {+ BBTag.tableHeader("API") +}
                            <if test="constructors.length">
                                <for each="item" in="constructors">
                                    <tr x-ww-support="{+item.support.supportTag+}">
                                        <td>
                                            {+new Link().toSymbol(item.alias).withText(getSymbolName(item))+}
                                            {+item.support.supportTable+}
                                        </td>
                                    </tr>
                                </for>
                            </if>
                            <for each="item" in="allChildren">
                                <tr x-ww-support="{+item.support.supportTag+}">
                                    <td>
                                        {+new Link().toSymbol(item.alias).withText(getSymbolName(item))+}
                                        {+item.support.supportTable+}
                                    </td>
                                </tr>
                            </for>
                        </table>
                    </div>
                </div>
            </div>
        </if>

{!/***********     Configuration Settings     ***********/!}
        <div class="ref-sect ref-index">
            <div class="ref-sect-title">
                <h2>Configuration Document Settings</h2>
            </div>
            <div class="ref-sect-content">
                <table><tbody>
                    <tr><td>
                        <p>To use <u>all</u> of the API described for this object, you must ensure the following settings are in your configuration document:</p>
                    </td></tr>
                    <if test="data.featureID">
                        <tr><td>
                            <p>You must declare the feature element(s) below in your configuration document:</p>
                        </td></tr></tbody></table>
                    <table>
                        {+ BBTag.tableHeader("Feature ID") +}
                        <for each="item" in="data.featureID">
                            {! item.support = (new BBTag.Support()); !}
                            <if test="item.type">
                                {!item.support.populateByString(item.type)!}
                            <else/>
                                {!item.support.populateBySymbol(data)!}
                            </if>
                            <tr x-ww-support="{+item.support.supportTag+}"><td>
                                &lt;feature id="{+item.desc+}" /&gt;
                                {+item.support.supportTable+}
                            </td></tr>
                        </for>
                    </table>
                <else/>
                    <tr><td>
                        This API does not require a &lt;feature&gt; element to be declared in the configuration document of your BlackBerry WebWorks Application.
                    </td></tr></tbody></table>
                </if>

                <div x-ww-support="{+BBTag.PlaybookSupport().supportTag+}">
                    <if test="data.permission">
                        {!
                            mandatoryPermissions = data.permission.filter(function($){return !$.isOptional}).sort(makeSortby("name"));
                            optionalPermissions = data.permission.filter(function($){return $.isOptional}).sort(makeSortby("name"));
                        !}
                    </if>
                    <table>
                        <tr>
                            <th>Permission Elements (PlayBook Only)</th>
                        </tr>
                        <if test="data.permission">
                            <if test="mandatoryPermissions.length">
                                <tr><td><i>
                                    You must declare the permission element(s) below in your configuration document:
                                </i></td></tr>
                                <for each="item" in="mandatoryPermissions">
                                    <tr><td>
                                        - &lt;rim:permit&gt;{+item.name+}&lt;/rim:permit&gt;
                                        <br />
                                        {+item.desc+}
                                        <br />
                                    </td></tr>
                                </for>
                            </if>

                            <if test="optionalPermissions.length">
                                <tr><td>
                                    <if test="mandatoryPermissions.length"><br /></if>
                                    <i>Declaring the permission element(s) below in your configuration document is optional.</i>
                                    <br />
                                </td></tr>
                                <br />

                                <for each="item" in="optionalPermissions">
                                    <tr><td>
                                        - &lt;rim:permit&gt;{+item.name+}&lt;/rim:permit&gt;
                                        <br />
                                        {+item.desc+}
                                        <br />
                                    </td></tr>
                                </for>
                            </if>
                        <else/>
                            <tr><td>
                                This API does not require a &lt;permission&gt; element to be declared in the configuration document of your BlackBerry WebWorks Application.
                            </td></tr>
                            <br />
                        </if>
                    </table>
                </div>
            </div>
        </div>

{!/***********     Summary     ***********/!}
        {!var args =
            {
                ownChildren         : [constructors,
                                       ownMethods,
                                       ownEvents,
                                       ownProperties,
                                       ownConstants,
                                       ownURIMethods ],
                headerText          : ["Constructors",
                                       "Functions",
                                       "Events",
                                       "Properties",
                                       "Constants",
                                       "URI Functions" ],
                inheritedChildren   : [[],
                                       data.methods.filter(function($) {return $.memberOf != data.alias && isMethod($)}),
                                       data.events.filter(function($) {return $.memberOf != data.alias && isEvent($)}),
                                       data.properties.filter(function($) {return $.memberOf != data.alias && isProperty($)}),
                                       data.properties.filter(function($) {return $.memberOf != data.alias && isConstant($)}),
                                       data.methods.filter(function($) {return $.memberOf != data.alias && isURIMethod($)}) ],
                supportTags         : [data.support.supportTag,
                                       (new BBTag.Support(data.methods.filter(function($) {return isMethod($)}))).supportTag,
                                       (new BBTag.Support(data.events.filter(function($) {return isEvent($)}))).supportTag,
                                       (new BBTag.Support(data.properties.filter(function($) {return isProperty($)}))).supportTag,
                                       (new BBTag.Support(data.properties.filter(function($) {return isConstant($)}))).supportTag,
                                       (new BBTag.Support(data.methods.filter(function($) {return isURIMethod($)}))).supportTag ]
            }
        !}
        {+subtemplate("subtemplates/summary.tmpl",args)+}

{!/***********     Details     ***********/!}
        {!var args =
            {
                ownChildren         : [constructors,
                                       ownMethods,
                                       ownEvents,
                                       ownProperties,
                                       ownConstants,
                                       ownURIMethods ],
                headerText          : ["Constructors",
                                       "Functions",
                                       "Events",
                                       "Properties",
                                       "Constants",
                                       "URI Functions" ]
            }
        !}
        {+subtemplate("subtemplates/functionDetails.tmpl",args)+}


{!/***********     Footer     ***********/!}
        <div >
            <if test="JSDOC.opt.D.copyright">&copy;{+JSDOC.opt.D.copyright+}<br /></if>
            Documentation generated by <a href="http://code.google.com/p/jsdoc-toolkit/" target="_blank">JsDoc Toolkit</a> {+JSDOC.VERSION+} on {+new Date()+}
        </div>

    </div>
</section>
